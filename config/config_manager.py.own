import json
import os
from pathlib import Path

def load_config():
    """Load main configuration from config.json"""
    config_path = Path('config/config.json')

    if not config_path.exists():
        # Create default config if not exists
        default_config = {
            "token": "YOUR_BOT_TOKEN",
            "owners": [],
            "database_path": "data/database"
        }

        # Create directories
        os.makedirs('config', exist_ok=True)
        os.makedirs('data/database', exist_ok=True)

        with open(config_path, 'w') as f:
            json.dump(default_config, f, indent=4)
        return default_config

    with open(config_path, 'r') as f:
        return json.load(f)

def load_guild_config(guild_id: int):
    """Load guild-specific configuration"""
    config_dir = Path('data/guilds')
    config_path = config_dir / f"{guild_id}.json"

    if not config_path.exists():
        os.makedirs(config_dir, exist_ok=True)

        default_config = {
            "prefix": "/",
            "log_channel_id": None,
            "welcome_channel_id": None,
            "welcome_message": "Welcome on the server, {member.display_name}!",
            "autorole": None
        }

        with open(config_path, 'w') as f:
            json.dump(default_config, f, indent=4)
        return default_config

    with open(config_path, 'r') as f:
        return json.load(f)

def save_guild_config(guild_id: int, config: dict):
    """Save guild-specific configuration"""
    config_dir = Path('data/guilds')
    os.makedirs(config_dir, exist_ok=True)

    with open(config_dir / f"{guild_id}.json", 'w') as f:
        json.dump(config, f, indent=4)
